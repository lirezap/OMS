<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.5.6</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <groupId>software.openex</groupId>
    <artifactId>oms</artifactId>
    <version>0.0.39</version>
    <name>oms</name>
    <description>Seriously Safe, Efficient and Fast Order Matching System</description>

    <properties>
        <!-- Java Version -->
        <java.version>25</java.version>

        <!-- Dependencies Versioning -->
        <lightbend.config.version>1.4.3</lightbend.config.version>
        <postgresql.jdbc.driver.version>42.7.7</postgresql.jdbc.driver.version>
        <hikaricp.version>5.1.0</hikaricp.version>
        <flyway.version>9.22.3</flyway.version>
        <jooq.version>3.20.5</jooq.version>
        <testcontainers.postgresql.version>1.21.3</testcontainers.postgresql.version>

        <!-- Plugins Versioning -->
        <docker.maven.plugin.version>0.46.0</docker.maven.plugin.version>

        <!-- Plugins Properties -->
        <postgresql.image>postgres:16</postgresql.image>
        <postgresql.host>localhost</postgresql.host>
        <!--suppress UnresolvedMavenProperty -->
        <db.url>jdbc:postgresql://${postgresql.host}:${db.port}/${db.name}</db.url>
        <db.name>oms</db.name>
        <db.username>oms</db.username>
        <db.password>oms</db.password>
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.typesafe</groupId>
            <artifactId>config</artifactId>
            <version>${lightbend.config.version}</version>
        </dependency>

        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>${postgresql.jdbc.driver.version}</version>
        </dependency>

        <dependency>
            <groupId>com.zaxxer</groupId>
            <artifactId>HikariCP</artifactId>
            <version>${hikaricp.version}</version>
        </dependency>

        <dependency>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-core</artifactId>
            <version>${flyway.version}</version>
        </dependency>

        <dependency>
            <groupId>org.jooq</groupId>
            <artifactId>jooq</artifactId>
            <version>${jooq.version}</version>
        </dependency>

        <dependency>
            <groupId>org.jooq</groupId>
            <artifactId>jooq-meta</artifactId>
            <version>${jooq.version}</version>
        </dependency>

        <dependency>
            <groupId>org.jooq</groupId>
            <artifactId>jooq-codegen</artifactId>
            <version>${jooq.version}</version>
        </dependency>

        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>postgresql</artifactId>
            <version>${testcontainers.postgresql.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- Flyway Maven Plugin -->
            <plugin>
                <groupId>org.flywaydb</groupId>
                <artifactId>flyway-maven-plugin</artifactId>
                <version>${flyway.version}</version>

                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>migrate</goal>
                        </goals>
                    </execution>
                </executions>

                <configuration>
                    <url>${db.url}</url>
                    <user>${db.username}</user>
                    <password>${db.password}</password>
                    <locations>
                        <location>filesystem:src/main/resources/db/migration/postgresql</location>
                    </locations>
                </configuration>
            </plugin>

            <!-- jOOQ Maven Plugin -->
            <plugin>
                <groupId>org.jooq</groupId>
                <artifactId>jooq-codegen-maven</artifactId>
                <version>${jooq.version}</version>

                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                    </execution>
                </executions>

                <configuration>
                    <jdbc>
                        <url>${db.url}</url>
                        <username>${db.username}</username>
                        <password>${db.password}</password>
                    </jdbc>

                    <generator>
                        <name>org.jooq.codegen.JavaGenerator</name>

                        <database>
                            <name>org.jooq.meta.postgres.PostgresDatabase</name>
                            <includes>.*</includes>
                            <inputSchema>public</inputSchema>

                            <forcedTypes>
                                <forcedType>
                                    <objectType>COLUMN</objectType>
                                    <nullability>ALL</nullability>
                                    <includeTypes>(?i:TIMESTAMPTZ)</includeTypes>
                                    <name>INSTANT</name>
                                </forcedType>
                            </forcedTypes>
                        </database>

                        <generate>
                            <fluentSetters>true</fluentSetters>
                            <daos>true</daos>
                        </generate>

                        <target>
                            <packageName>software.openex.oms.models</packageName>
                            <directory>target/generated-sources/jooq</directory>
                            <encoding>UTF-8</encoding>
                        </target>
                    </generator>
                </configuration>
            </plugin>

            <!-- Docker Maven Plugin -->
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>${docker.maven.plugin.version}</version>

                <executions>
                    <execution>
                        <id>start-after-initialize</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>start</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>stop-after-generate-sources</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                    </execution>
                </executions>

                <configuration>
                    <images>
                        <image>
                            <name>${postgresql.image}</name>
                            <alias>postgresql</alias>
                            <run>
                                <ports>
                                    <port>db.port:5432</port>
                                </ports>
                                <env>
                                    <POSTGRES_DB>${db.name}</POSTGRES_DB>
                                    <POSTGRES_USER>${db.username}</POSTGRES_USER>
                                    <POSTGRES_PASSWORD>${db.password}</POSTGRES_PASSWORD>
                                </env>
                                <log>
                                    <enabled>true</enabled>
                                    <prefix>POSTGRESQL |</prefix>
                                    <color>cyan</color>
                                </log>
                                <wait>
                                    <time>4000</time>
                                </wait>
                            </run>
                        </image>
                    </images>
                </configuration>
            </plugin>

            <!-- Spring Boot Maven Plugin -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
</project>
